class Solution {
public:
        int max_profit(vector<int>&prices,int buy,int index,vector<vector<int>>&dp,int fee){
            if(index==prices.size()){
                return 0;
            }
            if(dp[index][buy]!=-1){
                return dp[index][buy];
            }
            if(buy){
                // buy or skip
                int include=-prices[index]+max_profit(prices,0,index+1,dp,fee);
                int not_include=max_profit(prices,1,index+1,dp,fee);
                return dp[index][buy]=max(include,not_include);
            }
            int include=prices[index]+max_profit(prices,1,index+1,dp,fee)-fee;
            int not_include=max_profit(prices,0,index+1,dp,fee);
            return dp[index][buy]=max(include,not_include);
    }
    int maxProfit(vector<int>& prices, int fee) {
         vector<vector<int>>dp(prices.size()+1,vector<int>(2,-1));
         return max_profit(prices,1,0,dp,fee);
    }
};
